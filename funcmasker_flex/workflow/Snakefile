# ---- begin snakebids boilerplate ----------------------------------------------

from glob import glob
import snakebids
from snakebids import bids


configfile: "config/snakebids.yml"


include: "rules/setup.smk"
include: "rules/common.smk"
include: "rules/inference.smk"


if "mask" not in config["input_path"]:
    print(
        "Masks not found in the dataset, training or evaluation workflows will not be included"
    )
else:

    include: "rules/training.smk"
    include: "rules/evaluate.smk"


rule all_test:
    input:
        nii=expand(
            bids(
                root="results",
                datatype="func",
                desc="brain",
                suffix="mask.nii.gz",
                **config["input_wildcards"]["bold"]
            ),
            zip,
            **config["input_zip_lists"]["bold"]
        ),


rule all_train:
    input:
        expand(
            "resources/trained_models/nnUNet/{arch}/{unettask}/{trainer}__nnUNetPlansv2.1/fold_{fold}/{checkpoint}.model",
            fold=range(5),
            checkpoint=config["download_model"][model]["checkpoint"],
            unettask=config["download_model"][model]["unettask"],
            arch=config["nnunet"]["arch"],
            trainer=config["nnunet"]["trainer"],
        ),


rule all_model_tar:
    """Target rule to package trained model into a tar file"""
    input:
        model_tar=expand(
            "resources/trained_model.{arch}.{unettask}.{trainer}.{checkpoint}.tar",
            checkpoint=config["download_model"][model]["checkpoint"],
            unettask=config["download_model"][model]["unettask"],
            arch=config["nnunet"]["arch"],
            trainer=config["nnunet"]["trainer"],
        ),


rule all_evaluate:
    input:
        "test_dice.csv",
